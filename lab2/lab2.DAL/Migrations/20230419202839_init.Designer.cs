// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab2.DAL.Models;

#nullable disable

namespace lab2.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230419202839_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.Property<int>("DeveloperssId")
                        .HasColumnType("int");

                    b.Property<int>("TicketssId")
                        .HasColumnType("int");

                    b.HasKey("DeveloperssId", "TicketssId");

                    b.HasIndex("TicketssId");

                    b.ToTable("DeveloperTicket");
                });

            modelBuilder.Entity("lab2.DAL.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AI"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "DS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "PD"
                        },
                        new
                        {
                            Id = 5,
                            Name = "OS"
                        });
                });

            modelBuilder.Entity("lab2.DAL.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hani"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rami"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Omar"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amr"
                        });
                });

            modelBuilder.Entity("lab2.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Title = "ticket1"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 3,
                            Title = "ticket2"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 4,
                            Title = "ticket3"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            Title = "ticket4"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            Title = "ticket5"
                        });
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.HasOne("lab2.DAL.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DeveloperssId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab2.DAL.Models.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketssId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lab2.DAL.Models.Ticket", b =>
                {
                    b.HasOne("lab2.DAL.Models.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("lab2.DAL.Models.Department", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
